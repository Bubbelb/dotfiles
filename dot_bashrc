# If not running interactively, don't do anything
# vim: set ft=bash:
case $- in
    *i*) ;;
      *) return;;
esac

# Change default shell, if we're running distrobox
if [ -f "/run/host/etc/hostname" ] && [ -f "/etc/bbsh" ] && shopt -q login_shell ; then
    echo "Bash shell started as login shell inside bbsh. Will change to zsh."
    echo ""
    sleep .4
    echo '[ -d "${HOME}/.local/bin" ] && export PATH="${HOME}/.local/bin:${PATH}"' | sudo tee /etc/profile.d/bin_path.sh >/dev/null
    source /etc/profile.d/bin_path.sh
    chsh -s /bin/zsh
    exec /bin/zsh -l
fi

# Check if Path needs to be augmented with ~/.local/bin
if [[ -d "${HOME}/.local/bin" ]] ; then
    if ! [[ "${PATH}" =~ "${HOME}/.local/bin" ]] ; then
        export PATH="${HOME}/.local/bin:${PATH}"
    fi
fi

# CD Commands
alias -- -='cd -'
alias ...=../..
alias ....=../../..
alias .....=../../../..
alias ......=../../../../..
alias 1='cd -1'
alias 2='cd -2'
alias 3='cd -3'
alias 4='cd -4'
alias 5='cd -5'
alias 6='cd -6'
alias 7='cd -7'
alias 8='cd -8'
alias 9='cd -9'
shopt -s autocd

# Set vi/vim keybindings
set -o vi
bind '"\e."':yank-last-arg

HISTCONTROL=ignoreboth
HISTSIZE=1000
HISTFILESIZE=2000
shopt -s histappend

shopt -s checkwinsize
shopt -s globstar

### Display error exit codes
 EC() { echo -e '\e[1;33m'code $?'\e[m\n'; }
 trap EC ERR

### check the window size after each command and, if necessary,
 shopt -s checkwinsize

### Search History
 bind '"\e[A": history-search-backward'
 bind '"\e[B": history-search-forward'

### Set Word Forward/Backward as [ctrl][left]/[ctrl][right]
 bind '"\e[1;5C": forward-word'
 bind '"\e[1;5D": backward-word'

if ! shopt -oq posix; then
  if [ -f /usr/share/bash-completion/bash_completion ]; then
    . /usr/share/bash-completion/bash_completion
  elif [ -f /etc/bash_completion ]; then
    . /etc/bash_completion
  fi
fi

if [ -x /usr/lib/command-not-found -o -x /usr/share/command-not-found/command-not-found ]; then
	function command_not_found_handle {
        # check because c-n-f could've been removed in the meantime
        if [ -x /usr/lib/command-not-found ]; then
		   /usr/lib/command-not-found -- "$1"
                   return $?
                elif [ -x /usr/share/command-not-found/command-not-found ]; then
		   /usr/share/command-not-found/command-not-found -- "$1"
                   return $?
		else
		   printf "%s: command not found\n" "$1" >&2
		   return 127
		fi
	}
fi

[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"

if [ -n "${SUDO_USER}" ] ; then
    sudo_state='\[\e[97;1;101m\]S\[\e[m\]'
else
    sudo_state=''
fi

if [ "$(id -u)" -eq 0 ] ; then
    user_state='\[\e[91;100;1m\]\u\[\e[m\]@' # Root Colour (uid = 0)
elif [ "$(id -u)" -lt 1000 ] ; then
    user_state='\[\e[92;100;1m\]\u\[\e[m\]@' # System Account Colour (0 < uid < 1000)
else
    user_state='\[\e[92;100;1m\]\u\[\e[m\]@' # Normal User Colour
fi

if [ -f "/run/.containerenv" ] ; then # when this file exists, distrobox is used
    case $(grep '^name=' /run/.containerenv | sed -e 's/^name="\?//' -e 's/"#\?\s*$//') in
        bbsh )
            host_state="\[\e[97;1;41m\]BBSH\[\e[m\]"
            ;;
        Azure-TF )
            user_state=''
            host_state="\[\e[97;1;43m\]AZURE-TF\[\e[m\]"
            [[ -f "${HOME}/.local/bin/az.completion.sh" ]] && source "${HOME}/.local/bin/az.completion.sh"
            alias tf='az account set --subscription "$(basename ${PWD})" && terraform'
            cd "${HOME}/Projects.umcu"
            ;;
        * )
            host_state="\[\e[97;1;44m\]$(cat /run/host/etc/hostname)\[\e[m\]"
            ;;
    esac

    phost_state='\[\e[m\]ðŸ“¦'
else
    host_state="\[\e[97;44m\]\h\[\e[m\]"
    phost_state=''
fi

path_state=" [\[\e[1;44;97;7m\]\w\[\e[m\]]\$ "

PS1="${phost_state}${sudo_state}${user_state}${host_state}${path_state}"

unset phost_state sudo_state user_state host_state path_state

# enable color support of ls and also add handy aliases
if [ -x /usr/bin/dircolors ]; then
    test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"
    alias ls='ls --color=auto'
    alias grep='grep --color=auto'
fi

# some more ls aliases
alias ll='ls -l'
alias la='ls -A'
alias l='ls -CF'

# colored GCC warnings and errors
export GCC_COLORS='error=01;31:warning=01;35:note=01;36:caret=01;32:locus=01:quote=01'

# Bat additions
if [[ -x /usr/bin/bat ]] ; then
    alias batl='/usr/bin/bat -l log'
    alias batx='/usr/bin/bat -l xml'
    alias baty='/usr/bin/bat -l yaml'
    alias batj='/usr/bin/bat -l json'
    alias batt='/usr/bin/bat -l toml'
    alias bati='/usr/bin/bat -l ini'
elif [[ -x /usr/bin/batcat ]] ; then
    alias batl='/usr/bin/batcat -l log'
    alias batx='/usr/bin/batcat -l xml'
    alias baty='/usr/bin/batcat -l yaml'
    alias batj='/usr/bin/batcat -l json'
    alias batt='/usr/bin/batcat -l toml'
    alias bati='/usr/bin/batcat -l ini'
fi

